<cm:component xmlns:cm="http://www.agencexml.com/cm" name="XFToggle.js">
	<cm:author>Alain Couthures</cm:author>
	<cm:creationdate>2009-04-07</cm:creationdate>
	<cm:lastupdate>2009-04-07</cm:lastupdate>
	<cm:licence>
Copyright (C) 2008-2010 &lt;agenceXML&gt; - Alain COUTHURES
Contact at : &lt;info@agencexml.com&gt;

Copyright (C) 2006 AJAXForms S.L.
Contact at: &lt;info@ajaxforms.com&gt;

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
	</cm:licence>
	<cm:source type="text/javascript">
		<cm:wiki>
=== "XFToggle" class ===
Toggle Action Class
* constructor function : stores specific property</cm:wiki>
		<![CDATA[
function XFToggle(caseId, ifexpr, whileexpr) {
	this.caseId = caseId;
	this.init(ifexpr, whileexpr);
}

XFToggle.prototype = new XFAbstractAction();

]]>
		<cm:wiki>
* '''run''' method : toggles on the associated element</cm:wiki>
<![CDATA[
XFToggle.prototype.run = function(element, ctx) {
	XFToggle.toggle(this.caseId, ctx);
};

]]>
		<cm:wiki>
* '''toggle''' method : toggles on the element according to its id and dispatches the "xforms-deselect" event</cm:wiki>
<![CDATA[
XFToggle.toggle = function(caseId, ctx) {
	xforms.openAction();
	if (typeof caseId == 'object') {
		if (!ctx) {
			ctx = xforms.defaultModel.getInstanceDocument() ? xforms.defaultModel.getInstanceDocument().documentElement : null;
		}
		caseId = stringValue(caseId.xpath.evaluate(ctx));
	}
	var element = IdManager.find(caseId);
	var childs = element.parentNode.childNodes;
	var ul;
	var index = -1;

	if (childs.length > 0 && childs[0].nodeName.toLowerCase() == "ul") {
		ul = childs[0];
	}

	for (var i = ul != null? 1 : 0, len = childs.length; i < len; i++) {
		var child = childs[i];

		if (child == element) {
			index = i - 1;
		} else {
			if (child.style && child.style.display != "none") {
				child.style.display = "none";
									 
				if (ul != null) {
					Core.setClass(ul.childNodes[i - 1], "ajx-tab-selected", false);
				}
			}
			XMLEvents.dispatch(child, "xforms-deselect");
		}
	}

	if (element.style.display == "none") {
		element.style.display = "block";
	    
		if (ul != null) {
			Core.setClass(ul.childNodes[index], "ajx-tab-selected", true);
		}
	}
	XMLEvents.dispatch(element, "xforms-select");

	xforms.closeAction();
};
    ]]>
	</cm:source>
</cm:component>