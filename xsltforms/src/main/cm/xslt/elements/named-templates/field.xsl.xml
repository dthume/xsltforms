<cm:component xmlns:cm="http://www.agencexml.com/cm" name="field.xsl">
	<cm:author>Alain Couthures</cm:author>
	<cm:creationdate>2009-04-08</cm:creationdate>
	<cm:lastupdate>2009-04-08</cm:lastupdate>
	<cm:licence>
Copyright (C) 2008-2010 agenceXML - Alain COUTHURES
Contact at : info@agencexml.com

Copyright (C) 2006 AJAXForms S.L.
Contact at: info@ajaxforms.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
	</cm:licence>
	<cm:source type="application/xml">
<xsl:template xmlns="http://www.w3.org/1999/xhtml" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="field">
  <xsl:param name="appearance" select="false()"/>
  <xsl:param name="body"/>
  <span>
    <xsl:call-template name="genid"/>
    <xsl:call-template name="style">
      <xsl:with-param name="class">xforms-control xforms-<xsl:value-of select="local-name()"/><xsl:choose><xsl:when test="local-name()='trigger' or local-name()='submit' or string(xforms:label)=''"> xforms-appearance-minimal</xsl:when><xsl:when test="@appearance"> xforms-appearance-<xsl:value-of select="@appearance"/></xsl:when><xsl:otherwise> xforms-appearance</xsl:otherwise></xsl:choose></xsl:with-param>
    </xsl:call-template>
    <span>
      <span>
    <xsl:if test="local-name() != 'trigger' and local-name() != 'submit' and local-name() != 'reset' and local-name() != 'output' and xforms:label/node() and string($appearance) != 'none'">
      <span class="focus">&#xA0;<xsl:text/></span>
    </xsl:if>
    <xsl:if test="local-name() != 'trigger' and local-name() != 'submit' and local-name() != 'reset' and (xforms:label/node() or xforms:label/@ref) and string($appearance) != 'none'">
      <span class="label">
            <xsl:choose>
                <xsl:when test="$appearance = 'minimal'">
                    <xsl:apply-templates select="xforms:label">
                        <xsl:with-param name="appearance">field-minimal</xsl:with-param>
                    </xsl:apply-templates>
                </xsl:when>
                <xsl:when test="xforms:label/@ref and xforms:label/@ref != ''">
                    <xsl:variable name="label-name">
                        <xsl:choose>
                            <xsl:when test="xforms:label/@id">
                                <xsl:value-of select="xforms:label/@id"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:for-each select="xforms:label[1]">
                                  <xsl:variable name="lname" select="local-name()"/>
                                  <xsl:value-of select="$xformID" />
                                  <xsl:text>-xf-</xsl:text>
                                  <xsl:value-of select="$lname"/>
                                  <xsl:text>-</xsl:text>
                                  <xsl:value-of select="count(preceding::*[local-name()=$lname]|ancestor::*[local-name()=$lname])"/>
                                </xsl:for-each>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:variable>
                    <span id="{$label-name}"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:apply-templates select="xforms:label"/>
                </xsl:otherwise>
            </xsl:choose>
        </span>
    </xsl:if>
    <span class="value">
      <xsl:copy-of select="$body"/>
    </span>
    <span>
      <xsl:if test="@ajx:aid-button = 'true'">
        <button class="aid-button">...</button>
      </xsl:if>
      <xsl:if test="local-name() != 'output'">
        <span class="xforms-required-icon">*</span>
      </xsl:if>
      <span class="xforms-alert">
        <span class="xforms-alert-icon">
          <xsl:if test="xforms:alert">
        <xsl:attribute name="onmouseover">show(this, null, true)</xsl:attribute>
        <xsl:attribute name="onmouseout">show(this, null, false)</xsl:attribute>
          </xsl:if>
          <xsl:text>&#xA0;</xsl:text>
        </span>
        <xsl:if test="xforms:alert">
          <xsl:variable name="aid">
        <xsl:choose>
          <xsl:when test="xforms:alert/@id"><xsl:value-of select="xforms:alert/@id"/></xsl:when>
          <xsl:otherwise>
            <xsl:for-each select="xforms:alert[1]">
              <xsl:variable name="lname" select="local-name()"/>
              <xsl:value-of select="$xformID" />
              <xsl:text>-xf-</xsl:text>
              <xsl:value-of select="$lname"/>
              <xsl:text>-</xsl:text>
              <xsl:value-of select="count(preceding::*[local-name()=$lname]|ancestor::*[local-name()=$lname])"/>
            </xsl:for-each>
          </xsl:otherwise>
        </xsl:choose>
          </xsl:variable>
          <div class="xforms-alert-value" id="{$aid}">
        <xsl:apply-templates select="xforms:alert/node()"/>
          </div>
        </xsl:if>
      </span>
      <xsl:if test="xforms:hint">
        <span class="xforms-hint">
          <span class="xforms-hint-icon" onmouseover="show(this, 'hint', true)" onmouseout="show(this, 'hint', false)">&#xA0;<xsl:text/></span>
          <xsl:variable name="hid">
        <xsl:choose>
          <xsl:when test="xforms:hint/@id"><xsl:value-of select="xforms:hint/@id"/></xsl:when>
          <xsl:otherwise>
            <xsl:for-each select="xforms:hint[1]">
              <xsl:variable name="lname" select="local-name()"/>
              <xsl:value-of select="$xformID" />
              <xsl:text>-xf-</xsl:text>
              <xsl:value-of select="$lname"/>
              <xsl:text>-</xsl:text>
              <xsl:value-of select="count(preceding::*[local-name()=$lname]|ancestor::*[local-name()=$lname])"/>
            </xsl:for-each>
          </xsl:otherwise>
        </xsl:choose>
          </xsl:variable>
          <div class="xforms-hint-value" id="{$hid}">
        <xsl:apply-templates select="xforms:hint/node()"/>
          </div>
        </span>
      </xsl:if>
      <xsl:if test="xforms:help[not(@appearance='minimal')]">
        <span class="xforms-help">
          <span class="xforms-help-icon" onmouseover="show(this, 'help', true)" onmouseout="show(this, 'help', false)">&#xA0;<xsl:text/></span>
          <xsl:variable name="hid">
        <xsl:choose>
          <xsl:when test="xforms:help/@id"><xsl:value-of select="xforms:help/@id"/></xsl:when>
          <xsl:otherwise>
            <xsl:for-each select="xforms:help[1]">
              <xsl:variable name="lname" select="local-name()"/>
              <xsl:value-of select="$xformID" />
              <xsl:text>-xf-</xsl:text>
              <xsl:value-of select="$lname"/>
              <xsl:text>-</xsl:text>
              <xsl:value-of select="count(preceding::*[local-name()=$lname]|ancestor::*[local-name()=$lname])"/>
            </xsl:for-each>
          </xsl:otherwise>
        </xsl:choose>
          </xsl:variable>
          <div class="xforms-help-value" id="{$hid}">
        <xsl:apply-templates select="xforms:help/node()"/>
          </div>
        </span>
      </xsl:if>
    </span>
      </span>
    </span>
  </span>
</xsl:template>
</cm:source>
</cm:component>