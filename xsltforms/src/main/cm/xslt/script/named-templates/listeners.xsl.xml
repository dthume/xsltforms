<cm:component xmlns:cm="http://www.agencexml.com/cm" name="listeners.xsl">
	<cm:author>Alain Couthures</cm:author>
	<cm:creationdate>2009-04-08</cm:creationdate>
	<cm:lastupdate>2009-04-08</cm:lastupdate>
	<cm:licence>
Copyright (C) 2008-2010 agenceXML - Alain COUTHURES
Contact at : info@agencexml.com

Copyright (C) 2006 AJAXForms S.L.
Contact at: info@ajaxforms.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
	</cm:licence>
	<cm:source type="application/xml">
        <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="listeners">
            <xsl:param name="current"/>
            <xsl:variable name="lname" select="local-name()"/>
            <xsl:variable name="idlist" select="count(preceding::xforms:*[local-name()=$lname]|ancestor::xforms:*[local-name()=$lname])"/>
            <xsl:variable name="rid">
                <xsl:choose>
                    <xsl:when test="@id"><xsl:value-of select="@id"/></xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="$xformID" />
                        <xsl:text>-xf-</xsl:text>
                        <xsl:value-of select="$lname"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="$idlist"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
            <xsl:for-each select="xforms:setvalue|xforms:setindex|xforms:insert|xforms:load|xforms:delete|xforms:action|xforms:toggle|xforms:send|xforms:setfocus|xforms:dispatch|xforms:message|xforms:show|xforms:hide">
                <xsl:text>new xform.Listener({</xsl:text>
                <xsl:text>&#xA;&#9;observer: document.getElementById("</xsl:text>
                <xsl:choose>
                    <xsl:when test="@ev:observer"><xsl:value-of select="@ev:observer"/></xsl:when>
                    <xsl:otherwise><xsl:value-of select="$rid"/></xsl:otherwise>
                </xsl:choose>
                <xsl:text>"),&#xA;&#9;name: </xsl:text>
                <xsl:call-template name="toScriptParam">
                  <xsl:with-param name="p">
                    <xsl:choose>
                      <xsl:when test="@ev:event">
                    <xsl:value-of select="@ev:event" />
                      </xsl:when>
                      <xsl:otherwise>DOMActivate</xsl:otherwise>
                    </xsl:choose>
                  </xsl:with-param>
                </xsl:call-template>
                <xsl:text>,&#xA;&#9;phase:</xsl:text>
                <xsl:choose>
                    <xsl:when test="@ev:phase">"<xsl:value-of select="@ev:phase"/>"</xsl:when>
                    <xsl:otherwise>null</xsl:otherwise>
                </xsl:choose>
                <xsl:text>,&#xA;&#9;handler: function(evt) {xform.run(xf_</xsl:text>
                <xsl:variable name="lname2" select="local-name()"/>
                <xsl:variable name="nsuri" select="namespace-uri()"/>
                <xsl:value-of select="$lname2"/>
                <xsl:text>_</xsl:text>
                <xsl:value-of select="count(preceding::*[local-name()=$lname2 and namespace-uri()=$nsuri]|ancestor::*[local-name()=$lname2 and namespace-uri()=$nsuri])"/>
                <xsl:text>,getId(evt.currentTarget ? evt.currentTarget : evt.target),evt,</xsl:text>
                <xsl:choose>
                    <xsl:when test="@mode = 'synchronous'">true</xsl:when>
                    <xsl:otherwise>false</xsl:otherwise>
                </xsl:choose>
                <xsl:text>,</xsl:text>
                <xsl:choose>
                    <xsl:when test="@ev:propagate = 'stop'">false</xsl:when>
                    <xsl:otherwise>true</xsl:otherwise>
                </xsl:choose>
                <xsl:text>);}&#xA;});&#xA;</xsl:text>
            </xsl:for-each>
        </xsl:template>
	</cm:source>
</cm:component>